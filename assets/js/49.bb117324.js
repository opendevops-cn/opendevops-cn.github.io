(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{460:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"faq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[t._v("#")]),t._v(" FAQ")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#faq"}},[t._v("FAQ")])]),s("li",[s("a",{attrs:{href:"#邮箱设置问题"}},[t._v("邮箱设置问题")])]),s("li",[s("a",{attrs:{href:"#docker-bulid-报错问题"}},[t._v("Docker Bulid 报错问题")])]),s("li",[s("a",{attrs:{href:"#常见的错误码error-code排错思路"}},[t._v("常见的错误码error code排错思路")])]),s("li",[s("a",{attrs:{href:"#google-authenticator怎么使用"}},[t._v("Google Authenticator怎么使用?")])]),s("li",[s("a",{attrs:{href:"#login界面-登陆后一直自动刷新-闪屏-退出"}},[t._v("Login界面/登陆后一直自动刷新/闪屏/退出？")])]),s("li",[s("a",{attrs:{href:"#docker内部的mysql、redis无法连接问题"}},[t._v("Docker内部的MySQL、Redis无法连接问题")])]),s("li",[s("a",{attrs:{href:"#网关提示域名gw-opendevops-cn找不到-或者网络不通"}},[t._v("网关提示域名gw.opendevops.cn找不到，或者网络不通")])]),s("li",[s("a",{attrs:{href:"#新部署的系统无法创建user-没办法看到创建-重置-获取token"}},[t._v("新部署的系统无法创建User？没办法看到创建/重置/获取Token？")])]),s("li",[s("a",{attrs:{href:"#如何在-codo-上开发新应用"}},[t._v("如何在 CODO 上开发新应用")])]),s("li",[s("a",{attrs:{href:"#docker-compose-的部署如何更新最新版本"}},[t._v("Docker compose 的部署如何更新最新版本")])]),s("li",[s("a",{attrs:{href:"#如何获取参数与上下文传递变量"}},[t._v("如何获取参数与上下文传递变量")])])])]),s("p"),t._v(" "),s("h3",{attrs:{id:"邮箱设置问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#邮箱设置问题"}},[t._v("#")]),t._v(" 邮箱设置问题")]),t._v(" "),s("blockquote",[s("p",[t._v("由于常见的Email有很多，这里列举下最常见的Email设置")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Q: QQ邮箱怎么设置？")])]),t._v(" "),s("li",[s("p",[t._v("A: QQ邮箱主要注意使用网页生成授权码进行作为密码登陆")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://service.mail.qq.com/cgi-bin/help?id=28&no=167&subtype=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("SMTP地址"),s("OutboundLink")],1),t._v("：smtp.qq.com")]),t._v(" "),s("li",[t._v("SMTP端口：465")]),t._v(" "),s("li",[t._v("SSL加密：True, 开启")]),t._v(" "),s("li",[t._v("用   户: <your_qq>@qq.com")]),t._v(" "),s("li",[t._v("密   码： 授权码（一般为16位）")])])]),t._v(" "),s("li",[s("p",[t._v("Q: 腾讯企业邮箱如何设置？")])]),t._v(" "),s("li",[s("p",[t._v("A: 腾讯企业邮箱同QQ邮箱，唯一一点SMTP服务器不同")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://service.exmail.qq.com/cgi-bin/help?subtype=1&id=28&no=1000585",target:"_blank",rel:"noopener noreferrer"}},[t._v("SMTP地址"),s("OutboundLink")],1),t._v("：smtp.exmail.qq.com")]),t._v(" "),s("li",[t._v("SMTP端口：465")]),t._v(" "),s("li",[t._v("SSL加密：True, 开启")]),t._v(" "),s("li",[t._v("用   户: <your_name>@domain.com")]),t._v(" "),s("li",[t._v("密   码： 授权码（一般为16位）")])])]),t._v(" "),s("li",[s("p",[t._v("Q: 网易163邮箱如何设置？")])]),t._v(" "),s("li",[s("p",[t._v("A: 同上，唯一一点SMTP服务器不同")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://help.163.com/09/1223/14/5R7P3QI100753VB8.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SMTP地址"),s("OutboundLink")],1),t._v("：smtp.163.com")]),t._v(" "),s("li",[t._v("SMTP端口：465")]),t._v(" "),s("li",[t._v("SSL加密：True, 开启")]),t._v(" "),s("li",[t._v("用   户: <your_name>@163.com")]),t._v(" "),s("li",[t._v("密   码： 授权码（一般为16位）")])])]),t._v(" "),s("li",[s("p",[t._v("Q: Gmail邮箱如何设置？")])]),t._v(" "),s("li",[s("p",[t._v("A: Gmail邮箱考虑到安全，需要注意以下2步")]),t._v(" "),s("ul",[s("li",[t._v("首先开启Google 二步认证")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://support.google.com/mail/answer/185833?hl=zh-Hans",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成Google 应用专用密码"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://support.google.com/mail/answer/7126229?hl=zh-Hans&visit_id=636771670247559816-1235179449&rd=2",target:"_blank",rel:"noopener noreferrer"}},[t._v("SMTP地址"),s("OutboundLink")],1),t._v("：smtp.gmail.com")]),t._v(" "),s("li",[t._v("SMTP端口：465")]),t._v(" "),s("li",[t._v("SSL加密：True, 开启")]),t._v(" "),s("li",[t._v("用   户: <your_name>@gmail.com")]),t._v(" "),s("li",[t._v("密   码： 授权码（一般为16位）")])])])])]),t._v(" "),s("h3",{attrs:{id:"docker-bulid-报错问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-bulid-报错问题"}},[t._v("#")]),t._v(" Docker Bulid 报错问题")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("ul",[s("li",[t._v("安装依赖报错："),s("code",[t._v("Could not install packages due to an EnvironmentError'")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("错误信息：\nStep 10/16 : RUN pip3 install --upgrade pip\n---\x3e Running in 83716c526776\n\nCollecting pip\nDownloading https://files.pythonhosted.org/packages/c2/d7/90f34cb0d83a6c5631cf71dfe64cc1054598c843a92b400e55675cc2ac37/pip-18.1-py2.py3-none-any.whl (1.3MB)\nInstalling collected packages: pip\nFound existing installation: pip 10.0.1\nUninstalling pip-10.0.1:\nSuccessfully uninstalled pip-10.0.1\nCould not install packages due to an EnvironmentError: [Errno 2] No such file or directory: '/tmp/pip-uninstall-y8n2hlf9/usr/local/bin/pip3'\n\nThe command '/bin/sh -c pip3 install --upgrade pip' returned a non-zero code: 1\n")])])]),s("ul",[s("li",[t._v("解决办法：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("\nPython3x版本后Docker里面需要加入--user的参数，修改Dockerfile, 加上--user参数， 如：pip3 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--upgrade")]),t._v(" pip\n")])])])]),t._v(" "),s("h3",{attrs:{id:"常见的错误码error-code排错思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的错误码error-code排错思路"}},[t._v("#")]),t._v(" 常见的错误码error code排错思路")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("ul",[s("li",[t._v("404：  一般都是自己修改了域名或者配置错误，导致网关转发的时候没办法找到")]),t._v(" "),s("li",[t._v("500：  每个模块服务的后端报错，具体可参看报错模块日志： /var/log/supervisor/")]),t._v(" "),s("li",[t._v("502：  502错误是网关配置错误，请仔细检查网关配置和DNS配置，确保域名正常解析，且能访问。")])])]),t._v(" "),s("h3",{attrs:{id:"google-authenticator怎么使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#google-authenticator怎么使用"}},[t._v("#")]),t._v(" Google Authenticator怎么使用?")]),t._v(" "),s("blockquote",[s("p",[t._v("安全一定是最重要的，相信很多人都知道谷歌身份验证器，这里简单说下Google身份验证器怎么使用, 本平台Google验证码密钥是发送到用户邮箱的。")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("p",[s("strong",[t._v("下载谷歌验证器")])]),t._v(" "),s("ul",[s("li",[t._v('iOS用户登录AppStore搜索"Authenticator"')]),t._v(" "),s("li",[t._v("安卓用户登录应用商店或利用手机浏览器搜索“谷歌验证器”下载,也可"),s("a",{attrs:{href:"https://www.wandoujia.com/apps/com.google.android.apps.authenticator2",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击下载"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("strong",[t._v("添加所需网站验证码")])]),t._v(" "),s("p",[s("code",[t._v("PS 由于国内Android多数都被阉割了Google框架，不能扫码的输入手动贴入密钥")])]),t._v(" "),s("ul",[s("li",[t._v("扫描条形码")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/google_auth01.jpg",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("手动输入密钥")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/google_auth02.jpg",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("手机丢失怎么办")])]),t._v(" "),s("ol",[s("li",[t._v("你可以搜索你之前的邮件记录，或者自行记录保存下来")]),t._v(" "),s("li",[t._v("对于CODO超级管理员可以登陆数据库自行查看，SQL语法："),s("code",[t._v("select google_key from codo_admin.mg_users where username='codo_test';")])])])]),t._v(" "),s("h3",{attrs:{id:"login界面-登陆后一直自动刷新-闪屏-退出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#login界面-登陆后一直自动刷新-闪屏-退出"}},[t._v("#")]),t._v(" Login界面/登陆后一直自动刷新/闪屏/退出？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("p",[t._v("Q：可以登陆进去，但是一直闪屏刷新/退出？")]),t._v(" "),s("p",[t._v("A：出现这个问题是因为网关"),s("code",[t._v("token_secret")]),t._v("和"),s("code",[t._v("codo-admin")]),t._v("里面"),s("code",[t._v("token_secret")]),t._v("配置不一样，改成一样即可。\n请仔细阅读网关配置中的注册API网关文件 "),s("code",[t._v("configs.lua")]),t._v("这块")])]),t._v(" "),s("h3",{attrs:{id:"docker内部的mysql、redis无法连接问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker内部的mysql、redis无法连接问题"}},[t._v("#")]),t._v(" Docker内部的MySQL、Redis无法连接问题")]),t._v(" "),s("blockquote",[s("p",[t._v("有些同学发现在Docker内部无法连接到外面的MySQL，如下报错，一般都是防火墙引起的，防火墙不能关闭，因为NAT在用，清空掉Filter链 "),s("code",[t._v("iptables -F")]),t._v("或者添加上3306端口尝试下。")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("p",[s("img",{attrs:{src:"/243fb74c5a73af046696423d6ce7b92.png",alt:""}})])]),t._v(" "),s("h3",{attrs:{id:"网关提示域名gw-opendevops-cn找不到-或者网络不通"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网关提示域名gw-opendevops-cn找不到-或者网络不通"}},[t._v("#")]),t._v(" 网关提示域名gw.opendevops.cn找不到，或者网络不通")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('iptables -F\n### 这个是环境准备时候部署的dnsmasq所在的地址，请睁大眼睛不要写错了\necho "nameserver 127.0.0.1" > /etc/resolv.conf   \nservice dnsmasq restart\nsystemctl restart docker.service\nntpdate ntp1.aliyun.com\n')])])]),s("h3",{attrs:{id:"新部署的系统无法创建user-没办法看到创建-重置-获取token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新部署的系统无法创建user-没办法看到创建-重置-获取token"}},[t._v("#")]),t._v(" 新部署的系统无法创建User？没办法看到创建/重置/获取Token？")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("p",[t._v("Q：新部署的时候登陆进去，点击用户列表没办法创建/看不到重置密码/重置MFA按钮等问题？")]),t._v(" "),s("p",[t._v("A：这个问题是因为没有创建角色，默认部署的时候权限/组件数据都是初始化进去的，但是角色需要用户自己创建，用户可以点击"),s("strong",[t._v("用户管理")]),t._v("--\x3e"),s("strong",[t._v("角色管理")]),t._v("  新建一个角色，给所有组件/菜单/权限  然后退出，强刷下浏览器就可以了")]),t._v(" "),s("p",[t._v("操作步骤可参考：https://docs.opendevops.cn/zh/guide/more/permission/")])]),t._v(" "),s("h3",{attrs:{id:"如何在-codo-上开发新应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何在-codo-上开发新应用"}},[t._v("#")]),t._v(" 如何在 CODO 上开发新应用")]),t._v(" "),s("blockquote",[s("p",[t._v("基于CODO的开发框架进行开发新应用，前端、后端怎么开发和注册")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("p",[t._v("Q：前端怎么开发接入？")]),t._v(" "),s("ol",[s("li",[t._v("CODO 使用 qiankun 微前端架构进行模块集成。")]),t._v(" "),s("li",[t._v("使用CODO官方模板："),s("a",{attrs:{href:"(https://github.com/opendevops-cn/codo-subapp-tpl)"}},[t._v("codo-subapp-tpl 前端模板")])]),t._v(" "),s("li",[t._v("开发完成后，将子应用注册到 CODO 主框架中，关于注册和通信方式，详见："),s("a",{attrs:{href:"(https://github.com/opendevops-cn/codo-subapp-tpl)"}},[t._v("微前端开发文档")])])]),t._v(" "),s("p",[t._v("Q：后端怎么开发接入？")]),t._v(" "),s("ol",[s("li",[t._v("后端服务应提供标准 RESTful 接口，并通过 天门网关 接入 CODO。")]),t._v(" "),s("li",[t._v("使用任意后端框架（如 SpringBoot / Node.js / Flask）")]),t._v(" "),s("li",[t._v("接口路径规范化，并配置到天门网关中")]),t._v(" "),s("li",[t._v("配置参考文档 "),s("a",{attrs:{href:"https://github.com/opendevops-cn/codo-gateway",target:"_blank",rel:"noopener noreferrer"}},[t._v("天门文档"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("Q：应用展示与注册？")]),t._v(" "),s("blockquote",[s("p",[t._v("将你的应用注册到 CODO 管理后台即可在主界面展示。")])]),t._v(" "),s("ol",[s("li",[t._v("登录 CODO 管理后台")]),t._v(" "),s("li",[t._v("进入 应用管理 页面，添加你的应用信息")]),t._v(" "),s("li",[t._v("具体配置字段详见： "),s("a",{attrs:{href:"(https://github.com/opendevops-cn/codo-admin/blob/main/docs/codo-admin.md)"}},[t._v("用户手册")]),t._v("。")])]),t._v(" "),s("p",[s("strong",[t._v("📚 其他参考资料")])]),t._v(" "),s("ul",[s("li",[t._v("🔧 "),s("a",{attrs:{href:"https://github.com/umijs/qiankun",target:"_blank",rel:"noopener noreferrer"}},[t._v("qiankun 微前端框架"),s("OutboundLink")],1)])])]),t._v(" "),s("h3",{attrs:{id:"docker-compose-的部署如何更新最新版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-的部署如何更新最新版本"}},[t._v("#")]),t._v(" Docker compose 的部署如何更新最新版本")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("ol",[s("li",[t._v("更新镜像并重启")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" compose "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" docker-compose-app.yaml pull\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" compose "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" docker-compose-app.yaml up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("更新后报500错误，一般是字段发生变更需要删表重建或者自己补齐字段")])]),t._v(" "),s("p",[t._v("推荐把错误信息发给AI（GPT、Gemini、DS）让AI 告诉你怎么补齐新加的字段即可。")])]),t._v(" "),s("h3",{attrs:{id:"如何获取参数与上下文传递变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何获取参数与上下文传递变量"}},[t._v("#")]),t._v(" 如何获取参数与上下文传递变量")]),t._v(" "),s("p",[t._v("在流程自动化和脚本执行中，获取参数与传递变量是常见需求。以下介绍从不同来源获取参数并在上下文中传递变量的方法。")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("详细信息")]),t._v(" "),s("h4",{attrs:{id:"_1-生成流程过程变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-生成流程过程变量"}},[t._v("#")]),t._v(" 1. 生成流程过程变量")]),t._v(" "),s("p",[t._v("通过脚本输出标准化的格式，以便后续从日志中提取变量。约定格式为：")]),t._v(" "),s("ul",[s("li",[t._v("以 ###SOF### 开头，###EOF### 结尾。")]),t._v(" "),s("li",[t._v("内容为合法的 JSON 字符串。")])]),t._v(" "),s("p",[s("strong",[t._v("示例代码（Python）:")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env python")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" json\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义变量")]),t._v("\ndata "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Doe"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"is_employee"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出标准化数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"###SOF###')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dumps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('###EOF###"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("注意:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("日志处理程序需提取最后一组匹配 ###SOF### 和 ###EOF### 的内容。")])]),t._v(" "),s("li",[s("p",[t._v("确保输出为合法 JSON 格式，使用双引号以符合 JSON 标准。")])])]),t._v(" "),s("h4",{attrs:{id:"_2-无论使用何种语言-都可以从环境变量或上一步输出中获取上下文数据。以下是不同场景的实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-无论使用何种语言-都可以从环境变量或上一步输出中获取上下文数据。以下是不同场景的实现方式"}},[t._v("#")]),t._v(" 2. 无论使用何种语言，都可以从环境变量或上一步输出中获取上下文数据。以下是不同场景的实现方式：")]),t._v(" "),s("blockquote",[s("p",[t._v("FLOW_ID 和 NODE_ID 属于系统内置的变量可以直接获取\n环境变量 需要加codo_前缀")])]),t._v(" "),s("p",[s("strong",[t._v("示例代码（Shell/Bash）:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打印所有环境变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"==== 环境变量 ===="')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printenv")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"------------'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 系统内置的可以直接取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"订单的ID: '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${FLOW_ID}")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前任务节点的ID: '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${NODE_ID}")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前任务执行的agent的crc32之后agent_id: '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${crc32_agent_id}")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"------------'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境变量 需要加codo_前缀")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上个节点输出的名称: '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${codo_name}")]),t._v('"')]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("示例代码（Python）:")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取环境变量")]),t._v("\nflow_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FLOW_ID"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnode_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NODE_ID"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncrc32_agent_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crc32_agent_id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncodo_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"codo_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出环境变量信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"==== 环境变量 ===="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"订单的 ID: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("flow_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"当前任务节点的 ID: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Agent 的 CRC32 编码后 ID: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("crc32_agent_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"上个节点输出的名称: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("codo_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"tips-在自动化流程中-生成唯一标识很重要。以下组合能确保标识的唯一性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tips-在自动化流程中-生成唯一标识很重要。以下组合能确保标识的唯一性"}},[t._v("#")]),t._v(" "),s("strong",[t._v("tips: 在自动化流程中，生成唯一标识很重要。以下组合能确保标识的唯一性：")])]),t._v(" "),s("ul",[s("li",[t._v("FLOW_ID + NODE_ID：保证全局唯一性，用于标识同一流程中不同节点。")]),t._v(" "),s("li",[t._v("FLOW_ID + NODE_ID + crc32_agent_id：在批量执行场景中，可进一步区分任务实例。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);