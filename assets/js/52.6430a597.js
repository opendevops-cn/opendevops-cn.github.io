(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{459:function(a,s,t){"use strict";t.r(s);var e=t(25),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"如何更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何更新"}},[a._v("#")]),a._v(" 如何更新")]),a._v(" "),s("blockquote",[s("p",[a._v("主要介绍下前后端都是如何进行版本更新的")])]),a._v(" "),s("h2",{attrs:{id:"更新镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新镜像"}},[a._v("#")]),a._v(" 更新镜像")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入部署目录，例如：")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v("  ./codo-deploy-docs/docker-deploy\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker-compose")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" docker-compose-app.yaml pull\n")])])]),s("h3",{attrs:{id:"重新生成token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重新生成token"}},[a._v("#")]),a._v(" 重新生成token")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("TOKEN")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" codo_mg python3 manage.py token_init "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\\n'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\\r'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/^CODO_AUTH_KEY\\s*=.*/CODO_AUTH_KEY='),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$TOKEN")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v('/"')]),a._v(" .env\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i.bak")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/^CODO_AUTH_KEY=.*/CODO_AUTH_KEY='),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$TOKEN")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v('/"')]),a._v(" .env "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果是mac")]),a._v("\n")])])]),s("h2",{attrs:{id:"重新加载镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重新加载镜像"}},[a._v("#")]),a._v(" 重新加载镜像")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" compose "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" docker-compose-app.yaml up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("\n")])])]),s("h2",{attrs:{id:"数据库表结构变更"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库表结构变更"}},[a._v("#")]),a._v(" 数据库表结构变更")]),a._v(" "),s("ul",[s("li",[a._v("假如后端修改了表结构我怎么更新呢？")])]),a._v(" "),s("blockquote",[s("p",[a._v("如果后端修改了表结构，我们的更新文档都会说明哪些需要"),s("code",[a._v("ALTER TABLE")]),a._v(",比如CMDB资产配置新增了华为云的支持，")])]),a._v(" "),s("ul",[s("li",[a._v("问题1：我不想重新初始化，里面有数据，想直接改表结构")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\n#进到你的数据库，每个模块都是对应一个版本库的\n\nALTER TABLE `asset_configs` ADD `project_id` VARCHAR(120) NOT NULL ;\nALTER TABLE `asset_configs` ADD `huawei_cloud` VARCHAR(120) NOT NULL ;\nALTER TABLE `asset_configs` ADD `huawei_instance_id` VARCHAR(120) NOT NULL ;  \n\n")])])]),s("ul",[s("li",[a._v("问题2：我不想改表结构怎么办？")])]),a._v(" "),s("blockquote",[s("p",[a._v("如果你是新部署的用户/没数据的用户，你完全可以给这个库/表删除了执行初始化操作")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker exec -ti cmdb_codo_cmdb_1 /usr/local/bin/python3 /var/www/codo-cmdb/db_sync.py\n\n#最后同样，如上，更新最新代码即可\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);