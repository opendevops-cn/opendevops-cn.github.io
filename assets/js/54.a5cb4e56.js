(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{463:function(n,t,e){"use strict";e.r(t);var s=e(25),a=Object(s.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"inception"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inception"}},[n._v("#")]),n._v(" Inception")]),n._v(" "),t("blockquote",[t("p",[n._v("opendevops平台所用插件Inception部署文档， 部分文档会因为版本迭代不可用，此文档只作为参考文档，谢谢。")])]),n._v(" "),t("p",[t("strong",[n._v("1.在任何一台安装docker的主机上拉取镜像")])]),n._v(" "),t("blockquote",[t("p",[n._v("docker pull ss1917/inception:latest")])]),n._v(" "),t("p",[t("strong",[n._v("2.编辑inception配置文件，注意修改inception_remote四处配置项，指定一个数据库用以保存inception的备份及回滚语句")])]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("/etc/inc.cnf "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("EOF \n[inception]\ngeneral_log=1\ngeneral_log_file=/var/log/inception.log\nport=6669\nsocket=/tmp/inc.socket\ncharacter-set-client-handshake=OFF\ncharacter-set-server=utf8\n#config backup database\ninception_remote_system_password=aabb1122\ninception_remote_system_user=inception_web\ninception_remote_backup_port=3306\ninception_remote_backup_host=172.16.0.211\n\ninception_check_dml_where=ON\ninception_check_dml_limit=OFF\ninception_check_dml_orderby=OFF\ninception_enable_select_star=ON\ninception_enable_orderby_rand=ON\ninception_enable_nullable=ON\ninception_enable_foreign_key=ON\ninception_max_key_parts=5\ninception_max_update_rows=MAX\ninception_max_keys=6\ninception_enable_not_innodb=ON\ninception_support_charset=utf8mb4,utf8\ninception_check_table_comment=OFF\ninception_check_column_comment=OFF\ninception_check_primary_key=OFF\ninception_enable_partition_table=OFF\ninception_enable_enum_set_bit=ON\ninception_check_index_prefix=OFF\ninception_enable_autoincrement_unsigned=ON\ninception_max_char_length=16\ninception_check_autoincrement_init_value=OFF\ninception_check_autoincrement_datatype=OFF\ninception_check_timestamp_default=OFF\ninception_enable_column_charset=OFF\ninception_check_autoincrement_name=OFF\ninception_merge_alter_table=OFF\ninception_check_column_default_value=ON\ninception_enable_blob_type=ON\ninception_enable_identifer_keyword=ON\nbind_address=0.0.0.0\ninception_check_identifier=ON\nEOF")]),n._v("\n\n")])])]),t("p",[t("strong",[n._v("3.启动，主要参数为暴露容器6669端口，挂载本地inc.cnf文件到容器中的/etc目录下")])]),n._v(" "),t("blockquote",[t("p",[n._v("docker run -itd -p 6669:6669 -v /etc/inc.cnf:/etc/inc.cnf --name=inception ss1917/inception:latest")])]),n._v(" "),t("blockquote",[t("p",[n._v("在主机上测试连接6669端口成功，服务已正常启动。")])]),n._v(" "),t("p",[t("strong",[n._v("inc.cnf配置文件参数简要说明")])]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),n._v("inception"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("general_log")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("general_log_file")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("/var/log/inception.log\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("6669")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("socket")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("/tmp/inc.socket\ncharacter-set-client-handshake"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\ncharacter-set-server"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("utf8\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#备份相关")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#需要开启binlog")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_remote_system_password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("123456")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_remote_system_user")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("user\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_remote_backup_port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("3306")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_remote_backup_host")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("10.0")]),n._v(".0.24\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在DML语句中没有WHERE条件时，是不是要报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_dml_where")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在DML语句中使用了LIMIT时，是不是要报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_dml_limit")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在DML语句中使用了Order By时，是不是要报错")]),n._v("\ninception_check_dml_orderby\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#Select*时是不是要报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_select_star")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#order by rand时是不是报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_orderby_rand")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#创建或者新增列时如果列为NULL，是不是报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_nullable")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#是不是支持外键")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_foreign_key")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#一个索引中，列的最大个数，超过这个数目则报错(1-64)")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_max_key_parts")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("5")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在一个修改语句中，预计影响的最大行数，超过这个数就报错(1-max)")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_max_update_rows")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("10000")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#一个表中，最大的索引数目，超过这个数则报错(1-1024)")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_max_keys")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("16")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表指定的存储引擎不为Innodb，不报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_not_innodb")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#表示在建表或者建库时支持的字符集，如果需要多个，则用逗号分隔，影响的范围是建表、设置会话字符集、修改表字符集属性等")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_support_charset")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("utf8mb4\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，表没有注释时报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_table_comment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，列没有注释时报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_column_comment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，如果没有主键，则报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_primary_key")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#是不是支持分区表")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_partition_table")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#是不是支持enum,set,bit数据类型")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_enum_set_bit")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v('#是不是要检查索引名字前缀为"idx_"，检查唯一索引前缀是不是"uniq_"')]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_index_prefix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#自增列是不是要为无符号型")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_autoincrement_unsigned")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#当char类型的长度大于这个值时，就提示将其转换为VARCHAR(1-max)")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_max_char_length")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("16")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#当建表时自增列的值指定的不为1，则报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_autoincrement_init_value")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#当建表时自增列的类型不为int或者bigint时报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_autoincrement_datatype")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，如果没有为timestamp类型指定默认值，则报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_timestamp_default")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#允许列自己设置字符集")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_column_charset")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，如果指定的自增列的名字不为ID，则报错，说明是有意义的，给提示")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_autoincrement_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在多个改同一个表的语句出现时，报错，提示合成一个")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_merge_alter_table")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#检查在建表、修改列、新增列时，新的列属性是不是要有默认值")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_column_default_value")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#检查是不是支持BLOB字段，包括建表、修改列、新增列操作")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_blob_type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#检查在SQL语句中，是不是有标识符被写成MySQL的关键字，默认值为报警。")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_identifer_keyword")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#这个参数的作用是为了匹配Python客户端每次自动设置auto_commit=0的，如果取消则会报错，针对Inception本身没有实际意义")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#auto_commit=0")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#这个参数实际上就是MySQL数据库原来的参数，因为Incpetion没有权限验证过程，那么为了实现更安全的访问，可以给Inception服务器的这个参数设置某台机器（Inception上层的应用程序）不地址，这样")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#其它非法程序是不可访问的，那么再加上Inception执行的选项中的用户名密码，对MySQL就更加安全")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("bind_address")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("127.0")]),n._v(".0.1\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_user")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_password")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_enable_sql_statistic")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_read_only")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v('#打开与关闭Inception对SQL语句中各种名字的检查，如果设置为ON，则如果发现名字中存在除数字字母下划线之外的字符时，报Identifier "invalidname" is invalid, valid options: [a-z,A-Z,0-9,_].')]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_identifier")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_osc_min_table_size=1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_osc_bin_dir=/data/temp")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_osc_chunk_time=0.1")]),n._v("\n\n")])])]),t("p",[t("strong",[n._v("Inception使用方法")])]),n._v(" "),t("blockquote",[t("p",[n._v("1.Inception规定，在语句的最开始位置，要加上inception_magic_start;语句，在执行语句块的最后加上inception_magic_commit;语句，这2个语句在 Inception 中都是合法的、具有标记性质的可被正确解析的 SQL 语句。被包围起来的所有需要审核或者执行的语句都必须要在每条之后加上分号，其实就是批量执行SQL语句。（包括use database语句之后也要加分号，这点与 MySQL 客户端不同），不然存在语法错误")])]),n._v(" "),t("blockquote",[t("p",[n._v("2.目前执行只支持通过C/C++接口、Python接口来对Inception访问，这一段必须是一次性的通过执行接口提交给Inception，那么在处理完成之后，Inception会返回一个结果集，来告诉我们这些语句中存在什么错误，或者是完全正常等等。")])]),n._v(" "),t("p",[t("strong",[n._v("下面是一个python脚本访问inception的简单例子，指定连接测试的mysql服务器为10.0.0.24")])]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("inc-mysql.py "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('EOF\n#!/usr/bin/env python\n#coding=utf8\nimport MySQLdb\nsql=\'\'\'/*--user=root;--password=123456;--host=10.0.0.24;--execute=1;--port=3306;*/\\\n    inception_magic_start;\\\n    use test;\\\n    CREATE TABLE shinezone(id int);\\\n    inception_magic_commit;\'\'\'\n#print sql\ntry:\n        conn=MySQLdb.connect(host=\'127.0.0.1\',user=\'\',passwd=\'\',db=\'\',port=6669)\n        cur=conn.cursor()\n        ret=cur.execute(sql)\n        result=cur.fetchall()\n        num_fields = len(cur.description)\n        field_names = [i[0] for i in cur.description]\n        print field_names\n        for row in result:\n                print row[0], "|",row[1],"|",row[2],"|",row[3],"|",row[4],"|",row[5],"|",row[6],"|",row[7],"|",row[8],"|",row[9],"|",row[10]\n        cur.close()\n        conn.close()\nexcept MySQLdb.Error,e:\n             print "Mysql Error %d: %s" % (e.args[0], e.args[1])\nEOF')]),n._v("\n\n")])])]),t("p",[t("strong",[n._v("执行脚本")])]),n._v(" "),t("blockquote",[t("p",[n._v("python inc-mysql.py")])]),n._v(" "),t("blockquote",[t("p",[n._v("更改建表语句:")])]),n._v(" "),t("blockquote",[t("p",[n._v("CREATE TABLE shinezone(id int comment 'test' primary key) engine=innodb DEFAULT CHARSET=utf8mb4 comment '测试';\\")])]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("inc-mysql.py "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('EOF\n#!/usr/bin/env python\n#coding=utf8\nimport MySQLdb\nsql=\'\'\'/*--user=root;--password=123456;--host=10.0.0.24;--execute=1;--port=3306;*/\\\n    inception_magic_start;\\\n    use test;\\\n    CREATE TABLE shinezone(id int comment \'test\' primary key) engine=innodb DEFAULT CHARSET=utf8mb4 comment \'测试\';\\\n    inception_magic_commit;\'\'\'\n#print sql\ntry:\n        conn=MySQLdb.connect(host=\'127.0.0.1\',user=\'\',passwd=\'\',db=\'\',port=6669)\n        cur=conn.cursor()\n        ret=cur.execute(sql)\n        result=cur.fetchall()\n        num_fields = len(cur.description)\n        field_names = [i[0] for i in cur.description]\n        print field_names\n        for row in result:\n                print row[0], "|",row[1],"|",row[2],"|",row[3],"|",row[4],"|",row[5],"|",row[6],"|",row[7],"|",row[8],"|",row[9],"|",row[10]\n        cur.close()\n        conn.close()\nexcept MySQLdb.Error,e:\n             print "Mysql Error %d: %s" % (e.args[0], e.args[1])\nEOF')]),n._v("\n\n")])])]),t("blockquote",[t("p",[n._v("执行下脚本，同时生成回滚语句，记录在inception备份库中.")])]),n._v(" "),t("blockquote",[t("p",[n._v("备份机器的库名组成是由线上机器的 IP 地址的点换成下划线，再加上端口号，再加上库名三部分，在生成的备份中,可以看到inception自动生成的回滚语句")])])])}),[],!1,null,null,null);t.default=a.exports}}]);