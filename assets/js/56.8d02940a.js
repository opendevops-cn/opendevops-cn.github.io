(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{468:function(n,s,t){"use strict";t.r(s);var a=t(25),e=Object(a.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"插件文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件文档"}},[n._v("#")]),n._v(" 插件文档")]),n._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#sqladvisor部署文档"}},[n._v("SQLAdvisor部署文档")])]),s("li",[s("a",{attrs:{href:"#sonarqube部署文档"}},[n._v("sonarQube部署文档")])]),s("li",[s("a",{attrs:{href:"#soar部署文档"}},[n._v("SOAR部署文档")])]),s("li",[s("a",{attrs:{href:"#inception部署文档"}},[n._v("Inception部署文档")])]),s("li",[s("a",{attrs:{href:"#dns-bind部署文档"}},[n._v("DNS Bind部署文档")])])])]),s("p"),n._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[n._v("提示")]),n._v(" "),s("p",[n._v("插件部署提供参考")])]),n._v(" "),s("h3",{attrs:{id:"sqladvisor部署文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sqladvisor部署文档"}},[n._v("#")]),n._v(" SQLAdvisor部署文档")]),n._v(" "),s("blockquote",[s("p",[n._v("opendevops平台所用插件SQLAdvisor部署文档， 部分文档会因为版本迭代不可用，此文档只作为参考文档，谢谢。")])]),n._v(" "),s("p",[s("strong",[n._v("简介")])]),n._v(" "),s("blockquote",[s("p",[n._v("SQLAdvisor是一个分析SQL给出索引优化建议的工具。它基于MySQL原生态词法解析，结合分析SQL中的where条件、聚合条件、多表Join关系 给出索引优化建议。  主要功能：输出SQL索引优化建议,"),s("a",{attrs:{href:"https://github.com/Meituan-Dianping/SQLAdvisor/blob/master/doc/THEORY_PRACTICES.md",target:"_blank",rel:"noopener noreferrer"}},[n._v("更多介绍"),s("OutboundLink")],1)])]),n._v(" "),s("p",[s("strong",[n._v("安装使用")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#编译依赖项sqlparser")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" clone https://github.com/Meituan-Dianping/SQLAdvisor.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" SQLAdvisor\n"),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v(".cmake "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-DBUILD_CONFIG")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("mysql_release "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-DCMAKE_BUILD_TYPE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("debug "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-DCMAKE_INSTALL_PREFIX")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("/usr/local/sqlparser ./\n"),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("2")]),n._v(".make "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&&")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("make")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#安装SQLAdvisor源码")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" SQLAdvisor/sqladvisor/\ncmake "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-DCMAKE_BUILD_TYPE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("debug ./\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("make")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cp")]),n._v(" sqladvisor  /usr/bin/\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#使用帮助")]),n._v("\nsqladvisor  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("--help")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#举个栗子")]),n._v("\nsqladvisor  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-u")]),n._v(" root "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-p")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("123456")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-P")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("3306")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-h")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("10.0")]),n._v(".0.24 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-q")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"select permission_id from base_server_user_group_permission_relation;"')]),n._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-d")]),n._v(" work_permission_0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-v")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n")])])]),s("blockquote",[s("p",[n._v("编译完成后可删除整个sqladvisor目录，仅保留可执行文件sqladvisor。")])]),n._v(" "),s("h3",{attrs:{id:"sonarqube部署文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sonarqube部署文档"}},[n._v("#")]),n._v(" sonarQube部署文档")]),n._v(" "),s("blockquote",[s("p",[n._v("opendevops平台所用插件SonarQube部署文档， 部分文档会因为版本迭代不可用，此文档只作为参考文档，谢谢。")])]),n._v(" "),s("p",[s("a",{attrs:{href:"https://www.sonarqube.org/",target:"_blank",rel:"noopener noreferrer"}},[n._v("官网"),s("OutboundLink")],1)]),n._v(" "),s("p",[s("strong",[n._v("简介")])]),n._v(" "),s("blockquote",[s("p",[n._v("SonarQube 是一个开源的代码分析平台, 用来持续分析和评测项目源代码的质量。 通过SonarQube我们可以检测出项目中重复代码， 潜在bug， 代码风格问题，缺乏单元测试等问题， 并通过一个web ui展示出来。")])]),n._v(" "),s("p",[s("strong",[n._v("基础的架构")])]),n._v(" "),s("ul",[s("li",[n._v("Database")]),n._v(" "),s("li",[n._v("SonarQube Server")]),n._v(" "),s("li",[n._v("SonarQube Scanner")]),n._v(" "),s("li",[n._v("Project")]),n._v(" "),s("li",[n._v("Nginx （如果不需要通过nginx转发则不需要Nginx模块）")])]),n._v(" "),s("p",[s("strong",[n._v("SonarQube服务端")])]),n._v(" "),s("p",[n._v("直接拉取仓库中的docker镜像启动服务, docker、docker-compose安装参考"),s("a",{attrs:{href:"https://github.com/opendevops-cn/opendevops/tree/master/scripts",target:"_blank",rel:"noopener noreferrer"}},[n._v("初始化脚本"),s("OutboundLink")],1)]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[n._v("mkdir")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-p")]),n._v(" /data/sonarqube/\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("/data/sonarqube/docker-compose.yml "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('EOF\nversion: "2"\n\nservices:\n  sonarqube:\n    image: ss1917/sonarqube:latest\n    ports:\n      - "9000:9000"\n    networks:\n      - sonarnet\n    environment:\n      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar\n    volumes:\n      - /data/sonarqube/conf:/opt/sonarqube/conf\n      - /data/sonarqube/data:/opt/sonarqube/data\n      - /data/sonarqube/extensions:/opt/sonarqube/extensions\n      - /data/sonarqube/bundled-plugins:/opt/sonarqube/lib/bundled-plugins\n\n  db:\n    image: postgres\n    networks:\n      - sonarnet\n    environment:\n      - POSTGRES_USER=sonar\n      - POSTGRES_PASSWORD=sonar\n    volumes:\n      - postgresql:/var/lib/postgresql\n      - postgresql_data:/var/lib/postgresql/data\n\nnetworks:\n  sonarnet:\n    driver: bridge\n\nvolumes:\n  postgresql:\n  postgresql_data:\nEOF')]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" /data/sonarqube\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("docker-compose")]),n._v(" up "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-d")]),n._v("\n\n")])])]),s("p",[n._v("启动docker后访问ip:9000，代表服务已启动,默认登录密码admin/admin")]),n._v(" "),s("p",[s("img",{attrs:{src:"/login_sonar.png",alt:"login_sonar"}})]),n._v(" "),s("p",[n._v("SonarQube配置安装插件，汉化。")]),n._v(" "),s("p",[s("img",{attrs:{src:"/chinese_plug.png",alt:"chinese_plug"}}),n._v(" "),s("img",{attrs:{src:"/sonarp_plug.png",alt:"sonarp_plug"}})]),n._v(" "),s("p",[n._v("如图进入marketplace，搜索汉化包,各类语言代码扫描依赖包， 安装完毕后自动重启。")]),n._v(" "),s("p",[s("img",{attrs:{src:"/sonar_reboot.png",alt:"sonar_reboot"}})]),n._v(" "),s("p",[n._v("接下来开始配置sonarqube服务全局配置。")]),n._v(" "),s("p",[s("img",{attrs:{src:"/sonar_global.png",alt:"sonar_global"}})]),n._v(" "),s("p",[s("strong",[n._v("主要配置项：")])]),n._v(" "),s("ul",[s("li",[n._v("Server base URL (定义sonar服务访问地址，可用域名或ip)")]),n._v(" "),s("li",[n._v("Email prefix (发送邮件时的主题前缀)")]),n._v(" "),s("li",[n._v("From address")]),n._v(" "),s("li",[n._v("From name")]),n._v(" "),s("li",[n._v("Secure connection")])]),n._v(" "),s("p",[s("strong",[n._v("smtp安全协议")])]),n._v(" "),s("ul",[s("li",[n._v("SMTP host")]),n._v(" "),s("li",[n._v("SMTP password")]),n._v(" "),s("li",[n._v("SMTP port")])]),n._v(" "),s("p",[n._v("配置完成后测试发送")]),n._v(" "),s("p",[s("img",{attrs:{src:"/send_test.png",alt:"send_test"}})]),n._v(" "),s("p",[s("strong",[n._v("配置邮件提醒")])]),n._v(" "),s("p",[n._v("在 我的账号-提醒 下设置邮件提醒，也可针对特定项目设置提醒，发送邮件。")]),n._v(" "),s("p",[s("img",{attrs:{src:"/sonar_mail01.png",alt:"sonar_mail01"}}),n._v(" "),s("img",{attrs:{src:"/sonar_mail02.png",alt:"sonar_mail02"}})]),n._v(" "),s("p",[n._v("至此sonarqube服务端安装配置全部已完成。")]),n._v(" "),s("p",[s("strong",[n._v("SonarQube客户端(必装)")])]),n._v(" "),s("blockquote",[s("p",[n._v("配置好sonar的服务端之后，接下来就要使用sonar检测我们的代码了，sonar主要是借助客户端检测工具来检测代码，所以要使用sonar必须要在我们本地配置好客户端检测工具\n客户端可以通过IDE插件、Sonar-Scanner插件、Ant插件和Maven插件方式进行扫描分析，此处使用的是Sonar-Scanner,sonar的命令行分析端软件还有Sonar-Runner,和Scanner使用差不多")])]),n._v(" "),s("p",[s("strong",[n._v("此处我们使用sonar-scanner")])]),n._v(" "),s("p",[s("code",[n._v("注意：这里客户端后续代码检查脚本会调用此客户端执行代码检查")])]),n._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[n._v("wget")]),n._v(" https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("unzip")]),n._v("  sonar-scanner-cli-3.2.0.1227-linux.zip\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("mv")]),n._v(" sonar-scanner-3.2.0.1227-linux/ /usr/local/sonar-scanner\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("export")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("SONAR_RUNNER_HOME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("/usr/local/sonar-scanner\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("export")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[n._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$SONAR_RUNNER_HOME")]),n._v("/bin:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[n._v("$PATH")]),n._v("\n")])])]),s("h3",{attrs:{id:"soar部署文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#soar部署文档"}},[n._v("#")]),n._v(" SOAR部署文档")]),n._v(" "),s("blockquote",[s("p",[n._v("opendevops平台所用插件SOAR部署文档， 部分文档会因为版本迭代不可用，此文档只作为参考文档，谢谢。")])]),n._v(" "),s("p",[s("strong",[n._v("简介")])]),n._v(" "),s("blockquote",[s("p",[n._v("SOAR(SQL Optimizer And Rewriter)是一个对SQL进行优化和改写的自动化工具。 由小米人工智能与云平台的数据库团队开发与维护。SOAR 主要由语法解析器、集成环境、优化建议、重写逻辑、工具集五大模块组成，相比业内其他优秀产品有自己的优势。")])]),n._v(" "),s("p",[s("strong",[n._v("功能特点")])]),n._v(" "),s("ul",[s("li",[n._v("跨平台支持（支持Linux, Mac环境，Windows环境理论上也支持，不过未全面测试）")]),n._v(" "),s("li",[n._v("支持基于启发式算法的语句优化")]),n._v(" "),s("li",[n._v("支持复杂查询的多列索引优化（UPDATE, INSERT, DELETE, SELECT）")]),n._v(" "),s("li",[n._v("支持EXPLAIN信息丰富解读")]),n._v(" "),s("li",[n._v("支持SQL指纹、压缩和美化")]),n._v(" "),s("li",[n._v("支持同一张表多条ALTER请求合并")]),n._v(" "),s("li",[n._v("支持自定义规则的SQL改写")])]),n._v(" "),s("p",[s("strong",[n._v("下载二进制安装包")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[n._v("wget")]),n._v(" https://github.com/XiaoMi/soar/releases/download/0.9.0/soar.linux-amd64 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-O")]),n._v(" soar\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("chmod")]),n._v(" a+x soar\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cp")]),n._v(" soar /usr/bin/\n")])])]),s("p",[s("strong",[n._v("安装验证")])]),n._v(" "),s("p",[n._v("回到soar的下载目录执行")]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("echo")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("'select * from film'")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v(" ./soar\n")])])]),s("p",[s("strong",[n._v("回显如下")])]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("# Query: 687D590364E29465\n\n★ ★ ★ ☆ ☆ 75分\n\n``sql\n\nSELECT  \n  * \nFROM  \n  film\n``\n\n##  最外层SELECT未指定WHERE条件\n\n* **Item:**  CLA.001\n\n* **Severity:**  L4\n\n* **Content:**  SELECT语句没有WHERE子句，可能检查比预期更多的行(全表扫描)。对于SELECT COUNT(\\*)类型的请求如果不要求精度，建议使用SHOW TABLE STATUS或EXPLAIN替代。\n\n##  不建议使用SELECT * 类型查询\n\n* **Item:**  COL.001\n\n* **Severity:**  L1\n\n* **Content:**  当表结构变更时，使用\\*通配符选择所有列将导致查询的含义和行为会发生更改，可能导致查询返回更多的数据。\n\n")])])]),s("h3",{attrs:{id:"inception部署文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inception部署文档"}},[n._v("#")]),n._v(" Inception部署文档")]),n._v(" "),s("blockquote",[s("p",[n._v("opendevops平台所用插件Inception部署文档， 部分文档会因为版本迭代不可用，此文档只作为参考文档，谢谢。")])]),n._v(" "),s("p",[s("strong",[n._v("1.在任何一台安装docker的主机上拉取镜像")])]),n._v(" "),s("blockquote",[s("p",[n._v("docker pull ss1917/inception:latest")])]),n._v(" "),s("p",[s("strong",[n._v("2.编辑inception配置文件，注意修改inception_remote四处配置项，指定一个数据库用以保存inception的备份及回滚语句")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("/etc/inc.cnf "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("EOF \n[inception]\ngeneral_log=1\ngeneral_log_file=/var/log/inception.log\nport=6669\nsocket=/tmp/inc.socket\ncharacter-set-client-handshake=OFF\ncharacter-set-server=utf8\n#config backup database\ninception_remote_system_password=aabb1122\ninception_remote_system_user=inception_web\ninception_remote_backup_port=3306\ninception_remote_backup_host=172.16.0.211\n\ninception_check_dml_where=ON\ninception_check_dml_limit=OFF\ninception_check_dml_orderby=OFF\ninception_enable_select_star=ON\ninception_enable_orderby_rand=ON\ninception_enable_nullable=ON\ninception_enable_foreign_key=ON\ninception_max_key_parts=5\ninception_max_update_rows=MAX\ninception_max_keys=6\ninception_enable_not_innodb=ON\ninception_support_charset=utf8mb4,utf8\ninception_check_table_comment=OFF\ninception_check_column_comment=OFF\ninception_check_primary_key=OFF\ninception_enable_partition_table=OFF\ninception_enable_enum_set_bit=ON\ninception_check_index_prefix=OFF\ninception_enable_autoincrement_unsigned=ON\ninception_max_char_length=16\ninception_check_autoincrement_init_value=OFF\ninception_check_autoincrement_datatype=OFF\ninception_check_timestamp_default=OFF\ninception_enable_column_charset=OFF\ninception_check_autoincrement_name=OFF\ninception_merge_alter_table=OFF\ninception_check_column_default_value=ON\ninception_enable_blob_type=ON\ninception_enable_identifer_keyword=ON\nbind_address=0.0.0.0\ninception_check_identifier=ON\nEOF")]),n._v("\n\n")])])]),s("p",[s("strong",[n._v("3.启动，主要参数为暴露容器6669端口，挂载本地inc.cnf文件到容器中的/etc目录下")])]),n._v(" "),s("blockquote",[s("p",[n._v("docker run -itd -p 6669:6669 -v /etc/inc.cnf:/etc/inc.cnf --name=inception ss1917/inception:latest")])]),n._v(" "),s("blockquote",[s("p",[n._v("在主机上测试连接6669端口成功，服务已正常启动。")])]),n._v(" "),s("p",[s("strong",[n._v("inc.cnf配置文件参数简要说明")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),n._v("inception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("general_log")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("general_log_file")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("/var/log/inception.log\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("6669")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("socket")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("/tmp/inc.socket\ncharacter-set-client-handshake"),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\ncharacter-set-server"),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("utf8\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#备份相关")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#需要开启binlog")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_remote_system_password")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("123456")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_remote_system_user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("user\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_remote_backup_port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("3306")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_remote_backup_host")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("10.0")]),n._v(".0.24\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在DML语句中没有WHERE条件时，是不是要报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_dml_where")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在DML语句中使用了LIMIT时，是不是要报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_dml_limit")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在DML语句中使用了Order By时，是不是要报错")]),n._v("\ninception_check_dml_orderby\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#Select*时是不是要报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_select_star")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#order by rand时是不是报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_orderby_rand")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#创建或者新增列时如果列为NULL，是不是报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_nullable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#是不是支持外键")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_foreign_key")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#一个索引中，列的最大个数，超过这个数目则报错(1-64)")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_max_key_parts")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("5")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在一个修改语句中，预计影响的最大行数，超过这个数就报错(1-max)")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_max_update_rows")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("10000")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#一个表中，最大的索引数目，超过这个数则报错(1-1024)")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_max_keys")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("16")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表指定的存储引擎不为Innodb，不报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_not_innodb")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#表示在建表或者建库时支持的字符集，如果需要多个，则用逗号分隔，影响的范围是建表、设置会话字符集、修改表字符集属性等")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_support_charset")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("utf8mb4\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，表没有注释时报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_table_comment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，列没有注释时报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_column_comment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，如果没有主键，则报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_primary_key")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#是不是支持分区表")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_partition_table")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#是不是支持enum,set,bit数据类型")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_enum_set_bit")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v('#是不是要检查索引名字前缀为"idx_"，检查唯一索引前缀是不是"uniq_"')]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_index_prefix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#自增列是不是要为无符号型")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_autoincrement_unsigned")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#当char类型的长度大于这个值时，就提示将其转换为VARCHAR(1-max)")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_max_char_length")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("16")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#当建表时自增列的值指定的不为1，则报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_autoincrement_init_value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#当建表时自增列的类型不为int或者bigint时报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_autoincrement_datatype")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，如果没有为timestamp类型指定默认值，则报错")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_timestamp_default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#允许列自己设置字符集")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_column_charset")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#建表时，如果指定的自增列的名字不为ID，则报错，说明是有意义的，给提示")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_autoincrement_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#在多个改同一个表的语句出现时，报错，提示合成一个")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_merge_alter_table")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#检查在建表、修改列、新增列时，新的列属性是不是要有默认值")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_column_default_value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#检查是不是支持BLOB字段，包括建表、修改列、新增列操作")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_blob_type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#检查在SQL语句中，是不是有标识符被写成MySQL的关键字，默认值为报警。")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_enable_identifer_keyword")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#这个参数的作用是为了匹配Python客户端每次自动设置auto_commit=0的，如果取消则会报错，针对Inception本身没有实际意义")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#auto_commit=0")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#这个参数实际上就是MySQL数据库原来的参数，因为Incpetion没有权限验证过程，那么为了实现更安全的访问，可以给Inception服务器的这个参数设置某台机器（Inception上层的应用程序）不地址，这样")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#其它非法程序是不可访问的，那么再加上Inception执行的选项中的用户名密码，对MySQL就更加安全")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("bind_address")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("127.0")]),n._v(".0.1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_user")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_password")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_enable_sql_statistic")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_read_only")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v('#打开与关闭Inception对SQL语句中各种名字的检查，如果设置为ON，则如果发现名字中存在除数字字母下划线之外的字符时，报Identifier "invalidname" is invalid, valid options: [a-z,A-Z,0-9,_].')]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("inception_check_identifier")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_osc_min_table_size=1")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_osc_bin_dir=/data/temp")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#inception_osc_chunk_time=0.1")]),n._v("\n\n")])])]),s("p",[s("strong",[n._v("Inception使用方法")])]),n._v(" "),s("blockquote",[s("p",[n._v("1.Inception规定，在语句的最开始位置，要加上inception_magic_start;语句，在执行语句块的最后加上inception_magic_commit;语句，这2个语句在 Inception 中都是合法的、具有标记性质的可被正确解析的 SQL 语句。被包围起来的所有需要审核或者执行的语句都必须要在每条之后加上分号，其实就是批量执行SQL语句。（包括use database语句之后也要加分号，这点与 MySQL 客户端不同），不然存在语法错误")])]),n._v(" "),s("blockquote",[s("p",[n._v("2.目前执行只支持通过C/C++接口、Python接口来对Inception访问，这一段必须是一次性的通过执行接口提交给Inception，那么在处理完成之后，Inception会返回一个结果集，来告诉我们这些语句中存在什么错误，或者是完全正常等等。")])]),n._v(" "),s("p",[s("strong",[n._v("下面是一个python脚本访问inception的简单例子，指定连接测试的mysql服务器为10.0.0.24")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("inc-mysql.py "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('EOF\n#!/usr/bin/env python\n#coding=utf8\nimport MySQLdb\nsql=\'\'\'/*--user=root;--password=123456;--host=10.0.0.24;--execute=1;--port=3306;*/\\\n    inception_magic_start;\\\n    use test;\\\n    CREATE TABLE shinezone(id int);\\\n    inception_magic_commit;\'\'\'\n#print sql\ntry:\n        conn=MySQLdb.connect(host=\'127.0.0.1\',user=\'\',passwd=\'\',db=\'\',port=6669)\n        cur=conn.cursor()\n        ret=cur.execute(sql)\n        result=cur.fetchall()\n        num_fields = len(cur.description)\n        field_names = [i[0] for i in cur.description]\n        print field_names\n        for row in result:\n                print row[0], "|",row[1],"|",row[2],"|",row[3],"|",row[4],"|",row[5],"|",row[6],"|",row[7],"|",row[8],"|",row[9],"|",row[10]\n        cur.close()\n        conn.close()\nexcept MySQLdb.Error,e:\n             print "Mysql Error %d: %s" % (e.args[0], e.args[1])\nEOF')]),n._v("\n\n")])])]),s("p",[s("strong",[n._v("执行脚本")])]),n._v(" "),s("blockquote",[s("p",[n._v("python inc-mysql.py")])]),n._v(" "),s("blockquote",[s("p",[n._v("更改建表语句:")])]),n._v(" "),s("blockquote",[s("p",[n._v("CREATE TABLE shinezone(id int comment 'test' primary key) engine=innodb DEFAULT CHARSET=utf8mb4 comment '测试';\\")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("inc-mysql.py "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('EOF\n#!/usr/bin/env python\n#coding=utf8\nimport MySQLdb\nsql=\'\'\'/*--user=root;--password=123456;--host=10.0.0.24;--execute=1;--port=3306;*/\\\n    inception_magic_start;\\\n    use test;\\\n    CREATE TABLE shinezone(id int comment \'test\' primary key) engine=innodb DEFAULT CHARSET=utf8mb4 comment \'测试\';\\\n    inception_magic_commit;\'\'\'\n#print sql\ntry:\n        conn=MySQLdb.connect(host=\'127.0.0.1\',user=\'\',passwd=\'\',db=\'\',port=6669)\n        cur=conn.cursor()\n        ret=cur.execute(sql)\n        result=cur.fetchall()\n        num_fields = len(cur.description)\n        field_names = [i[0] for i in cur.description]\n        print field_names\n        for row in result:\n                print row[0], "|",row[1],"|",row[2],"|",row[3],"|",row[4],"|",row[5],"|",row[6],"|",row[7],"|",row[8],"|",row[9],"|",row[10]\n        cur.close()\n        conn.close()\nexcept MySQLdb.Error,e:\n             print "Mysql Error %d: %s" % (e.args[0], e.args[1])\nEOF')]),n._v("\n\n")])])]),s("blockquote",[s("p",[n._v("执行下脚本，同时生成回滚语句，记录在inception备份库中.")])]),n._v(" "),s("blockquote",[s("p",[n._v("备份机器的库名组成是由线上机器的 IP 地址的点换成下划线，再加上端口号，再加上库名三部分，在生成的备份中,可以看到inception自动生成的回滚语句")])]),n._v(" "),s("h3",{attrs:{id:"dns-bind部署文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns-bind部署文档"}},[n._v("#")]),n._v(" DNS Bind部署文档")]),n._v(" "),s("blockquote",[s("p",[n._v("opendevops平台所用组件"),s("a",{attrs:{href:"https://github.com/opendevops-cn/codo-dns",target:"_blank",rel:"noopener noreferrer"}},[n._v("域名管理"),s("OutboundLink")],1),n._v("Bind部署文档， 部分文档会因为版本迭代不可用，此文档只作为参考文档，谢谢。")])]),n._v(" "),s("p",[s("strong",[n._v("安装配置")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[n._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[n._v("-y")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("bind")]),n._v(" bind-chroot bind-utils\n")])])]),s("ul",[s("li",[s("p",[n._v("如果安装了bind-chroot（其中chroot是 change root 的缩写），BIND会被封装到一个伪根目录内，配置文件的位置变为：/var/named/chroot/etc/named.conf")])]),n._v(" "),s("li",[s("p",[n._v("BIND服务主配置文件/var/named/chroot/var/named/")])]),n._v(" "),s("li",[s("p",[n._v("zone文件chroot是通过相关文件封装在一个伪根目录内，已达到安全防护的目的，一旦程序被攻破，将只能访问伪根目录内的内容，而不是真实的根目录")])]),n._v(" "),s("li",[s("p",[n._v("BIND安装好之后不会有预制的配置文件，但是在BIND的文档文件夹内（/usr/share/doc/bind-9.9.4），BIND为我们提供了配置文件模板，我们可以直接拷贝过来：")])])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# cp -r /usr/share/doc/bind-9.9.4/sample/etc/* /var/named/chroot/etc/")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# cp -r /usr/share/doc/bind-9.9.4/sample/var/* /var/named/chroot/var/")]),n._v("\n")])])]),s("ul",[s("li",[n._v("配置BIND服务的主配置文件（/var/named/chroot/etc/named.conf，并加入zone参数")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[n._v("options "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        listen-on port "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("53")]),n._v("       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("127.0")]),n._v(".0.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        listen-on-v6 port "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("53")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v(" ::1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        allow-query     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        directory "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"/var/named"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        recursion "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("yes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\nzone "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"ss.com"')]),n._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("type")]),n._v(" master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"ss.com.zone"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])])]),s("ul",[s("li",[n._v("新建ss.com.zone文件 如下")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# vim /var/named/chroot/var/named/ss.com.zone")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$TTL")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("86400")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$ORIGIN")]),n._v(" ss.com.\n@  IN SOA  ss.com. admin.ss.com. "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("\n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("20190426")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" serial "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#更新序列号")]),n._v("\n                    1D  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" refresh "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#更新时间")]),n._v("\n                    1H  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" retry "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#重试延时")]),n._v("\n                    1W  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" expire "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#失效时间")]),n._v("\n                    3H  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" minimum "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#无效解析记录的缓存时间")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    IN  NS  ns1.ss.com.\n\nns1 "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("3600")]),n._v(" IN   A   "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("192.168")]),n._v(".99.99\nwww "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("3600")]),n._v(" IN   A   "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("172.20")]),n._v(".66.110\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("ftp")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("3600")]),n._v(" IN   A  "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("10.128")]),n._v(".105.250\n")])])]),s("ul",[s("li",[n._v("禁用bind默认方式启动，改用bind-chroot方式启动。命令如下：")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[n._v("/usr/libexec/setup-named-chroot.sh /var/named/chroot on\nsystemctl stop named\nsystemctl disable named\nsystemctl start named-chroot\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("enable")]),n._v(" named-chroot\n")])])]),s("ul",[s("li",[n._v("检查语法")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# named-checkzone ss.com /var/named/ss.com.zone")]),n._v("\nzone ss.com/IN: loaded serial "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("20190426")]),n._v("\nOK\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# named-checkconf")]),n._v("\n")])])]),s("ul",[s("li",[n._v("查看是否启动，命令：")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[n._v("ps")]),n._v(" -ef"),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("grep")]),n._v(" named\n")])])]),s("ul",[s("li",[n._v("测试DNS服务，命令如下：")])]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("### 编辑dns解析文件 并写入你的DNS服务器地址")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("vim")]),n._v(" /etc/resolv.conf \nnameserver "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("172.16")]),n._v(".0.111\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("dig")]),n._v(" ftp.ss.com\n")])])]),s("p",[s("strong",[n._v("参考文档")])]),n._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/bbwangj/article/details/82079405",target:"_blank",rel:"noopener noreferrer"}},[n._v("参考文档1"),s("OutboundLink")],1)]),n._v(" "),s("p",[s("a",{attrs:{href:"https://blog.51cto.com/liqingbiao/2093064",target:"_blank",rel:"noopener noreferrer"}},[n._v("参考文档2"),s("OutboundLink")],1)]),n._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/bpingchang/article/details/38377053",target:"_blank",rel:"noopener noreferrer"}},[n._v("参考文档3"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);